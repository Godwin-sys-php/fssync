/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'net.janbuchinger.code.fssync.FSSync'

version = '0.8a'
sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    
    // Apache 2.0
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
	compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
    
    // Apache 2.0
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile 'com.google.code.gson:gson:2.8.2'
    
    // Apache 2.0
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile 'commons-io:commons-io:2.5'
    
    // Apache 2.0
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
	compile group: 'commons-codec', name: 'commons-codec', version: '1.11'
    
    // Apache 2.0
    // https://github.com/janbuchinger/mishmash
    compile 'com.github.janbuchinger:mishmash:0.3.6'
    
    // Apache 2.0
    // https://mvnrepository.com/artifact/joda-time/joda-time
	// compile group: 'joda-time', name: 'joda-time', version: '2.10'
    
}

// needed to get libraries from github
allprojects {
	repositories {
		maven { url "https://jitpack.io" }
	}
}

// include resources dir
sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

// jar file creation
jar {
    manifest {
        attributes 'Main-Class': 'net.janbuchinger.code.fssync.FSSync',
        	'Implementation-Title': 'FSSync',
        	'Implementation-Version': version
    }
	baseName = project.name
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

// create sources jar
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// create javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// create sources and javadococ jar
artifacts {
    archives sourcesJar
    archives javadocJar
}
